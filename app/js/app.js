// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module('moo', ['ngRoute', 'ngResource', 'moo.filters', 'moo.services', 'moo.directives', 'moo.controllers']).constant("ServiceUrls", {
    cowServer: "http://scout2:8080/cow-server/",
    amqp: {
      url: "http://scout2:15674/stomp",
      exchange: "/exchange/amq.topic/",
      connectTimeout: 5 * 1000
    }
  }).constant("areas", [
    {
      name: "Tasks",
      defaultRoute: {
        url: "/tasks",
        templateUrl: "partials/tasks/task-home.html",
        controller: "TaskListCtrl",
        resolve: {
          User: "CurrentUser"
        }
      },
      otherRoutes: [
        {
          url: "/tasks/:taskId",
          templateUrl: "partials/tasks/task-detail.html",
          controller: "TaskDetailCtrl"
        }
      ]
    }, {
      name: "Active Workflows",
      defaultRoute: {
        url: "/active-workflows",
        templateUrl: "partials/active-workflows.html",
        controller: "ActiveWorkflowsCtrl"
      }
    }
  ]).config([
    "$routeProvider", "areas", function($routeProvider, areas) {
      var addRoute, area, route, _i, _j, _len, _len1, _ref;
      addRoute = function(areaName, route) {
        return $routeProvider.when(route.url, {
          templateUrl: route.templateUrl,
          controller: route.controller,
          provide: {
            area: areaName
          },
          resolve: route.resolve
        });
      };
      for (_i = 0, _len = areas.length; _i < _len; _i++) {
        area = areas[_i];
        addRoute(area.name, area.defaultRoute);
        if (area.otherRoutes == null) {
          continue;
        }
        _ref = area.otherRoutes;
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          route = _ref[_j];
          addRoute(area.name, route);
        }
      }
      return $routeProvider.otherwise({
        redirectTo: "/tasks"
      });
    }
  ]).config([
    "$httpProvider", function($httpProvider) {
      return $httpProvider.defaults.withCredentials = true;
    }
  ]);

}).call(this);

//# sourceMappingURL=app.map
