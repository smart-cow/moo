// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module('moo', ['ngRoute', 'ngResource', 'moo.filters', 'moo.services', 'moo.directives', 'moo.controllers']).constant("serviceUrls", {
    cowServer: "http://scout2:8080/cow-server/",
    amqp: {
      url: "http://scout2:15674/stomp",
      exchange: "/exchange/amq.topic/",
      connectTimeout: 5 * 1000
    }
  }).constant("areas", {
    Tasks: {
      defaultRoute: {
        url: "/tasks",
        templateUrl: "partials/task-list.html",
        controller: "TaskListCtrl"
      },
      otherRoutes: [
        {
          url: "/tasks/:taskId",
          templateUrl: "partials/task-detail.html",
          controller: "TaskDetailCtrl"
        }
      ]
    },
    "Active Workflows": {
      defaultRoute: {
        url: "/active-workflows",
        templateUrl: "partials/active-workflows.html",
        controller: "ActiveWorkflowsCtrl"
      }
    }
  }).config([
    "$routeProvider", "areas", function($routeProvider, areas) {
      var addRoute, area, areaName, route, _i, _len, _ref;
      addRoute = function(areaName, route) {
        return $routeProvider.when(route.url, {
          templateUrl: route.templateUrl,
          controller: route.controller,
          provide: {
            area: areaName
          }
        });
      };
      for (areaName in areas) {
        area = areas[areaName];
        addRoute(areaName, area.defaultRoute);
        if (area.otherRoutes == null) {
          continue;
        }
        _ref = area.otherRoutes;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          route = _ref[_i];
          addRoute(areaName, route);
        }
      }
      return $routeProvider.otherwise({
        redirectTo: "/tasks"
      });
    }
  ]).config([
    "$httpProvider", function($httpProvider) {
      return $httpProvider.defaults.withCredentials = true;
    }
  ]);

}).call(this);

//# sourceMappingURL=app.map
