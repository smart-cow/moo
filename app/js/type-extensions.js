// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty;

  String.prototype.m$rightOf = function(char) {
    return this.substr(this.lastIndexOf(char) + 1);
  };

  String.prototype.m$leftOf = function(char) {
    return this.substr(0, this.indexOf(char));
  };

  Array.prototype.m$first = function(predicate, includeIndex) {
    var element, index, _i, _len;
    if (includeIndex == null) {
      includeIndex = false;
    }
    for (index = _i = 0, _len = this.length; _i < _len; index = ++_i) {
      element = this[index];
      if (predicate(element)) {
        if (includeIndex) {
          return [element, index];
        } else {
          return element;
        }
      }
    }
    if (includeIndex) {
      return [null, null];
    } else {
      return null;
    }
  };

  Array.prototype.m$remove = function(predicate) {
    var element, index, _ref;
    while (true) {
      _ref = this.m$first(predicate, true), element = _ref[0], index = _ref[1];
      if (element == null) {
        return;
      }
      this.splice(index, 1);
    }
  };

  Array.prototype.m$unique = function() {
    var e, isNum, key, map, ret, _i, _len;
    map = {};
    for (_i = 0, _len = this.length; _i < _len; _i++) {
      e = this[_i];
      map[e] = typeof e === typeof 0.;
    }
    ret = [];
    for (key in map) {
      if (!__hasProp.call(map, key)) continue;
      isNum = map[key];
      if (isNum) {
        ret.push(+key);
      } else {
        ret.push(key);
      }
    }
    return ret;
  };

}).call(this);

//# sourceMappingURL=type-extensions.map
